<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posty on Krzysztof Pobożan</title><link>https://krzpob.github.io/pl/posts/</link><description>Recent content in Posty on Krzysztof Pobożan</description><generator>Hugo -- gohugo.io</generator><language>pl</language><atom:link href="https://krzpob.github.io/pl/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Garbage Collectory w Javie</title><link>https://krzpob.github.io/pl/posts/java/garbage-collectors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://krzpob.github.io/pl/posts/java/garbage-collectors/</guid><description>&lt;p>Garbage Collector (GC) to jeden z kluczowych elementów zarządzania pamięcią w języku Java. Dzięki niemu programista nie musi ręcznie zwalniać pamięci zajmowanej przez nieużywane obiekty, co znacząco ułatwia pracę i zmniejsza ryzyko błędów. W tym artykule przyjrzymy się rodzajom Garbage Collectorów dostępnych w Javie oraz ich zastosowaniom.&lt;/p>
&lt;hr>
&lt;h2 id="czym-jest-garbage-collector">Czym jest Garbage Collector?&lt;/h2>
&lt;p>Garbage Collector to mechanizm wbudowany w Java Virtual Machine (JVM), który automatycznie zwalnia pamięć zajmowaną przez obiekty, do których nie ma już referencji. Dzięki temu aplikacja nie wycieka pamięci, a programista może skupić się na logice biznesowej, zamiast ręcznie zarządzać alokacją i dealokacją pamięci.&lt;/p></description></item></channel></rss>